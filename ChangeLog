2002-08-20  Luke Gorrie  <luke@bluetail.com>

	* elisp/erl-service.el (erl-find-source-under-point): Can now
	handle text like "foo:bar/2" - i.e. reads the arity correctly, so
	you can jump to definitions from e.g. export lists. Actual change
	made in `erl-get-arity'.

	* All: XEmacs and Emacs20 compatibility fixes (tested edb,
	erl-process-list).

2002-08-19  david wallin  <david.wallin@ul.ie>

	* elisp/distel.el (erlang-extended-mode): Added keybindings 
	for distel-ie.
	C-c C-d s : Start a session.
	C-c C-d c : Copy current buffer to a session.
	C-c C-d r : Copy a marked region in the current buffer to a session.

	* elisp/distel-ie.el (erl-ie-copy-buffer-to-session): Renamed
	erl-ie-copy-to-session.
	* elisp/distel-ie.el (erl-ie-copy-region-to-session): Same as 
	erl-ie-copy-buffer-to-session but works on a marked region.

2002-08-19  Luke Gorrie  <luke@bluetail.com>

	* elisp/distel.el, elisp/erlang-mode-ext.el: Renamed
	erlang-mode-ext.el to distel.el, so that it's obvious what the
	"top level" is. Now you need to (require 'distel) in your init
	file instead of (require 'erlang-mode-ext).

	* elisp/erl-service.el, distel.erl (fprof): Fixed the fprof
	interface to handle multiple processes. Used the compiler as a
	test case.

	The presentation of results is seriously inadequate for such large
	quantities of data. What's needed is a sexy tree layout like the
	OptimizeIt profiler for Java has.

2002-08-18  david wallin  <david@dolly.csis.ul.ie>

	* elisp/distel-ie.el (erl-ie-evaluate): Can now receive messages 
	that should go into the minibuffer.

	* elisp/distel-ie.el (erl-ie-evaluate): Slight correction on how
	the output of formatted.

	* elisp/distel-ie.el (erl-ie-fiddle-with-me): New function. Copies
	the content of the current buffer into a session. So you can 'fiddle'
	away on the code without screwing up the original file. 
	(Suggestions for name change are welcome).

	* erl/distel_ie.erl (ensure_registered/0): Updates the 
	group leader on an already running 'distel_ie' process. 
	So if you do M-x erl-ie-session and connect to a node where 
	distel_ie is already running, the stdin/stdout is correctly
	redirected.

	* erl/distel_ie.erl (evaluate/2): Defining a new function returns 
	the function name and arity.

	* erl/distel_ie.erl (get_function_name/1): Returns the arity as well.
	
2002-08-17  Luke Gorrie  <luke@bluetail.com>

	* Buildscripts: Revamped the makefiles, inspired by host fast
	Ghostscript does "the null make" without recursions. Stole all the
	code from Darius Bacon's idel package - very handy.

	Anyhoo, now you can do "./configure && make && make install" and
	you get the files installed in all the usual bits of /usr/local/ -
	even the manual in your Info directory.

	For really lazy people, you can do "make conf_install", which will
	patch your .emacs and .erlang to setup the right hooks to run
	everything (this Should Be perfectly safe, not that I'd trust
	someone else's program to do it to mine..)

	You can also do "make dist" to build a distributable package (in
	../) -- but if I start finding cheap knock-off Distel CDs selling
	in china, I'm gonna come after you.

	NOTE: When you checkout this from CVS, you will have to do
	"autoconf && ./configure" to generate your Makefile.
	
	* doc/distel.texi: Brought up-to-date with recent changes.

2002-08-14  Luke Gorrie  <luke@bluetail.com>

	* elisp/edb.el (edb-attach-with-new-frame): Setting this variable
	to non-nil makes the debugger create new frames to attach to
	processes.

2002-08-04  Luke Gorrie  <luke@bluetail.com>

	* elisp/edb.el: Improved variables window (now you can press
	return on a variable to popup its full value).

	* elisp/erl-service.el (erl-read-nodename): Now you can enter node
	names without the @host part, and they're taken to refer to the
	local host.

	* README: OSX setup instructions care of David Wallin.

	* elisp/edb.el, distel.erl: Added up/down motion through the
	stack in the debugger.

2002-08-03  Luke Gorrie  <luke@bluetail.com>

	* Everywhere: Changed the datatype mapping so that tuples are just
	vectors, so {ok, "foo"} becomes [ok "foo"] instead of
	[tuple ok "foo"]. Pids and ports, which are also vectors, now
	contain a special `erl-tag' in their first element, which is the
	uninterned symbol `TYPE'. Because the symbol is uninterned, it's
	not equal to what you get from 'TYPE, even though it looks the
	same. It's distinct from any value that can appear in an actual
	tuple, so the mapping is unambiguous.

	This modification is _not_ backwards compatible. Any tuple-based
	pattern matching needs to be updated, and any accesses to tuple
	elements with `elt' will now be off-by-one (there is a `tuple-elt'
	function to use instead, which indexes from 1). I've fixed
	everything that grepped on "elt" or "tuple", and everything seems
	to work.
	
	I'd been scratching for a nice way to do this since the beginning
	-- an uninterned symbol is just right.
	
2002-08-02  Luke Gorrie  <luke@bluetail.com>

	* elisp/derl.el (ensure-have-dec32): Rewrite based on
	`locate-library', hopefully now more portable.

2002-08-01  Luke Gorrie  <luke@bluetail.com>

	* elisp/erl-service.el (erl-goto-end-of-call-name): Added a
	work-around for the installation on Tobbe's machine, which doesn't
	put ':' in the same syntax class as mine does. Cause as yet
	unknown.

	* elisp/erlang-mode-ext.el: Decided to hijack the TAGS key
	bindings, so now M-. takes you from a function call to the
	definition, and M-, jumps you back afterwards.

	* elisp/erl-service.el (erl-find-source-unwind): Added "unwind"
	feature for going back after following function calls to their
	definitions (suggested by Tobbe, and very nice).

2002-07-29  Luke Gorrie  <luke@bluetail.com>

	* elisp/erl.el (erl-determine-hostname): Doing a better job of
	figuring out the local hostname, to choose emacs's node name.

	* everywhere: On-line documentation improvements, so that
	'describe-mode' (C-h m) will tell you about all the funky features
	of the various modes.
	
	* erlang-mode-ext.el: Switch keybindings prefix to "C-cC-d". Now
	have an "erlang-extended-mode" minor mode, which includes all
	extensions including edb.

	* elisp/erl.el (erl-run-process): When a process crashes due to an
	elisp error, the exit reason is stringified to avoid e.g.  trying
	to send buffer objects to erlang nodes inside an exit reason.

	* edb.el, distel.erl: Debugger enhancements.
	
	* derl.el: Stopped including "TICK" messages in the
	"*trace <nodename>*" buffers. They're too distracting.

2002-07-27  Luke Gorrie  <luke@bluetail.com>

	* elisp/erl.el (erl-idle): (erl-idle) puts the process into a
	receive that matches nothing, making the process idle
	indefinitely. This can be interrupted by executing code in the
	process via an emacs command.

	* elisp/erl-service.el (erl-show-process-info-item): Now possible
	to view individual process items, with special support for
	message queues and backtraces.
	(erl-find-source): Better.

2002-06-24  Luke Gorrie  <luke@bluetail.com>

	* erl/distel.erl: Erlang-side debugger support. Fprof interface
	can parse expressions.

	* elisp/erlang-mode-ext.el: More key bindings ("C-c C-e" prefix),
	moved debugging code to edb.el

	* elisp/edb.el: New file for (much improved and extended) debugger
	code.

	* elisp/erl-service.el (erl-find-source): Added erl-find-source to
	find and load the source code for a module by name.
	(fprof): Fprof now takes an erlang expression as input instead of
	MFA.

	* elisp/erl.el (erl-run-process): Saves current buffer when
	invoking the process continuation, so that cleanup works when the
	process returns in another buffer.

2002-06-17  Luke Gorrie  <luke@bluetail.com>

	* elisp/erlang-mode-ext.el, erl/distel.erl: Beginnings of
	debugger support: partial implementation of the "monitor".

2002-06-02  Luke Gorrie  <luke@bluetail.com>

	* erl/distel.erl: Added rpc_entry(M,F,A) which installs a
	group_leader proxy/adapter.

	* elisp/net-fsm.el: Sprinkled some more multibyte-avoidance code
	around. The default coding-system mangled messages on my laptop,
	but with 'no-conversion' it now works.

	* elisp/erl.el: Added "real" group_leader support, with a default
	group_leader writing output to *erl-output*. The group leader
	protocol is not the same as Erlang's (needs to be adapted), and
	supports just one message: {put_chars, Chars}.

	* elisp/erl-service.el (erl-send-rpc): RPCs now go via
	distel:rpc_entry(M,F,A), to setup a group_leader.
	(erl-eval-expression): Added - evaluates an erlang expression.

	* elisp/derl.el: Giving a specific error when 'dec32' isn't
	installed in PATH.

2002-04-24  Luke Gorrie  <luke@bluetail.com>

	* elisp/erl-service.el (fprof): Added a front-end to the 'fprof'
	profiler. Very minimal so far.

2002-04-22  Luke Gorrie  <luke@bluetail.com>

	* elisp/erl.el (erl-run-process): Uncaught errors in processes
	are now caught by the scheduler, which terminates the process and
	then continues.

2002-04-21  Luke Gorrie  <luke@bluetail.com>

	*  elisp/*.el: XEmacs compatibility fixes.

2002-04-20  Luke Gorrie  <luke@bluetail.com>

	* elisp/*.el: Added 'receive' construct, and updated existing
	programs to use it.

