PACKAGE := distel
VERSION := 3.0a

prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
datadir     = @datadir@
infodir     = @infodir@
erlc        = @erlc@
emacs       = @emacs@

ELISP_DIR = ${datadir}/${emacs}/site-lisp/distel
EBIN_DIR = ${datadir}/distel/ebin
ERL_SRC_DIR = ${datadir}/distel/src

########################################
## Main part

ERL_SRC := $(wildcard erl/*.erl)
ERL_OBJ := $(patsubst erl/%.erl,ebin/%.beam,${ERL_SRC})

ELISP_SRC := elisp/erlext.el
ELISP_OBJ := $(patsubst %.el,%.elc,${ELISP_SRC})

C_SRC := c/dec32.c
C_OBJ := c/dec32

DOC_SRC  := doc/distel.texi
INFO_OBJ := doc/distel.info
PS_OBJ   := doc/distel.ps

OBJECTS := ${ERL_OBJ} ${ELISP_OBJ} ${C_OBJ} ${INFO_OBJ} ${PS_OBJ}

base: ${ERL_OBJ} ${ELISP_OBJ} ${C_OBJ}
info: ${INFO_OBJ}
postscript: ${PS_OBJ}
all: base info postscript

erl: ${ERL_OBJ}

########################################
## Rules

## Erlang
ebin/%.beam: erl/%.erl
	erlc -W -o ebin +debug_info $<

## Elisp
elisp/%.elc: elisp/%.el
	${emacs} -batch -f batch-byte-compile $<

## Info documentation
doc/distel.info: ${DOC_SRC}
	makeinfo -o $@ $<

## Postscript documentation
doc/distel.ps: doc/distel.dvi
	dvips -o $@ $<

doc/distel.dvi: ${DOC_SRC}
	(cd doc; texi2dvi distel.texi)

## C
c/dec32: c/dec32.c
	${CC} -g -o $@ $<

########################################

configure: configure.in Makefile.in
	autoconf

Makefile: Makefile.in config.status
	./config.status

config/emacs-init-snippet.el: config/emacs-init-snippet.el.in config.status
	./config.status

config.status: configure
	./config.status --recheck

clean:
	-rm -f ${OBJECTS} 2>/dev/null

distclean: clean
	-rm -f config.* configure.scan Makefile *~ */*~ 2>/dev/null

install: base
	@echo "* Installing C helper"
	install -m 775 c/dec32 ${bindir}/dec32
	@echo
	@echo "* Installing Emacs Lisp Library"
	install -m 775 -d ${ELISP_DIR} ${EBIN_DIR} ${ERL_SRC_DIR}
	install -m 775 elisp/*.el elisp/*.elc ${ELISP_DIR}
	@echo
	@echo "* Installing Erlang Library"
	install -m 775 ebin/*.beam ${EBIN_DIR}
	install -m 775 erl/*.erl ${ERL_SRC_DIR}
	@echo
	@echo "*** Successfully installed. See README for usage instructions."
	@echo

info_install: info
	  @echo "* Installing Info documentation"
	  cp doc/distel.info ${infodir}
# NB: Debian's not-GNU-compatible install-info needs "--section Emacs Emacs"
	  install-info --info-dir=${infodir} --section Emacs \
		       ${infodir}/distel.info

dist: always distclean configure
	cd .. && ln -sf ${PACKAGE} ${PACKAGE}-${VERSION}
	cd .. && (find ${PACKAGE}-${VERSION} -follow -type f | \
		  egrep -v '(^attic/)|/CVS/|\.cvsignore' | \
		  xargs tar czf ${PACKAGE}-${VERSION}.tar.gz \
			${PACKAGE}-${VERSION}/ebin)
	rm ../${PACKAGE}-${VERSION}

wc:
	@echo "* Emacs Lisp"
	@wc -l */*.el | sort -nr
	@echo "* Erlang"
	@wc -l */*.erl | sort -nr
	@echo "* C"
	@wc -l */*.c | sort -nr

########################################
# Targets to automatically update ~/.emacs and ~/.erlang
#
# This code is pretty ugly right now, but since it only appends
# there's not much room for harm.

config_install: dot_erlang dot_emacs

dot_emacs: base
	(grep distel-erlang-mode-hook ${HOME}/.emacs || \
		cat config/emacs-init-snippet.el >> ${HOME}/.emacs) \
	>/dev/null

dot_erlang: base
	(grep 'code:add_pathz("'${EBIN_DIR}'").' ${HOME}/.erlang || \
		echo -e "\n%% The following line was automatically added by Distel config_install:\n"'code:add_pathz("'${EBIN_DIR}'").' >> ${HOME}/.erlang) \
	>/dev/null

.INTERMEDIATE: doc/distel.dvi
.PHONY: always

